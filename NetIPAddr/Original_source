//http://www.geekpage.jp/en/programming/linux-network/get-ipaddr.php
//On Linux platform, you can use ioctl to obtain the IP address information. 
//To use ioctl, you must create a socket. 
//The important thing is that the socket family used is AF_INET. 
//You can use either TCP(SOCK_STREAM) or UDP(SOCK_DGRAM) socket. 
//This sample uses an UDP socket.
//The socket used to get the IP address information can be closed after obtaining the IP address information. 
//You can use it as a normal socket to communicate too. 
//gcc netipaddr.c -o netipaddr

#include <stdio.h>
#include <unistd.h>
#include <string.h> /* for strncpy */
#include <arpa/inet.h>
#include <sys/socket.h>
//====Start-Local_IP_Address====
#include <sys/types.h>    // C data types    --|
#include <sys/ioctl.h>    //                   |== Support IP Address Function
#include <netinet/in.h>   //                   |
#include <net/if.h>       //                 --|
//====End-Local_IP_Address====


int
main()
{
//====Start-Local_IP_Address====
 int ipfd;
 struct ifreq ifr;
 ipfd = socket(AF_INET, SOCK_DGRAM, 0);
 ifr.ifr_addr.sa_family = AF_INET; /* I want to get an IPv4 IP address */
 strncpy(ifr.ifr_name, "eth0", IFNAMSIZ-1); /* I want IP address attached to "eth0" */
 ioctl(ipfd, SIOCGIFADDR, &ifr);
 close(ipfd);

 printf("%s\n", inet_ntoa(((struct sockaddr_in *)&ifr.ifr_addr)->sin_addr)); /* display result */
//====End-Local_IP_Address====

 return 0;
}
